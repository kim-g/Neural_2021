import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense,Dropout
from random import randint

#генератор(ошибка в нём(вчера вечером понял))

xy=set()
while len(xy) < 40:
  a = (randint(-3, 3), randint(-3, 3))
  xy.add(a)#генерируем значения кординат
answer1=[]#ответы для нс 
answer2=[1,1,1,1,1,1,1,0]
test = [[0,0],[1,0],[-1,0],[-1,-1],[0,-1],[1,-1],[0,-2],[1,1],[0,-200]]
#строки 12,13 это точки(векторы)
#и ответы для model.evaluate
for x in xy:
   y=0
   if x[1]<=y and x[1] >=-2:
       x_in_equation = ((x[1]+2)/0.5)**0.5
       if x_in_equation >= 0:
           if x[0] <= x_in_equation:
               answer1.append(1)
           if x[0] > x_in_equation:
               answer1.append(0)
       if x_in_equation < 0:
           if x[0] >= x_in_equation:
               answer1.append(1)
           if x[0] < x_in_equation:
               answer1.append(0)
   else:
       answer1.append(0)
xy = np.array(list(xy))
test=np.array(test)
answer1=np.array(answer1)
answer2=np.array(answer2)
print(xy,'\n',answer1)
print(len(xy),len(answer1))
#нс
model1=keras.Sequential([
   Dense(1, input_shape=(2,),activation='sigmoid'),
   Dense(1,activation = 'linear'),
   Dense(1,activation = 'linear')
])#создаём стопку слоёв из одного слоя с 2-мя входами
model1.compile(loss='mean_squared_error', optimizer = keras.optimizers.Adam(0.1), metrics=['accuracy'])#настраиваем модель нс
history1 = model1.fit( x=xy, y=answer1, epochs = 1000, verbose=False,validation_split=0.2)#обучаем
plt.plot(history1.history['loss'])
plt.grid(True)
plt.show#выводим график
print(model1.get_weights())#выводим веса
# Оценим модель на тестовых данных, используя "evaluate"
print('\n# Оцениваем на тестовых данных')
model1.evaluate(test, answer2)

#p.s. не бейте по шапке за то ,
#что сейчас выгружаю код
