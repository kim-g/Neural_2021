import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense #импорты

#выборка

xy = np.random.randint(-2000,2000,(200,2))#генерируем значения кординат
answer = []
for x in xy:
   y=3*x[0]+2
   if x[1]>=y:
      answer.append(1)
   if x[1]<y:
      answer.append(0)
answer=np.array(answer)#генерируем таблицу ответов основвваясь на заданной функции и таблице кординат

#нейросеть

model=keras.Sequential([
   Dense(1, input_shape=(2,),activation='linear')
])#создаём стопку слоёв из одного слоя с 2-мя входами
model.compile(loss='mean_squared_error', optimizer = keras.optimizers.Adam(0.1))#настраиваем модель нс
history = model.fit( x=xy, y=answer, epochs = 100, verbose=False)#обучаем
plt.plot(history.history['loss'])
plt.grid(True)
plt.show#выводим график
print(model.get_weights())#выводим веса

#ввод значений заданных пользователем в программу и вывод получившийся при проходе через нейросеть

m = 0
for i in input().split():#ввод
   num1 = int(i)
   m+=1
   if m == 2:
      m = 0
      print(model.predict(np.array([[num2 ,num1]])))#вывод
   num2 = int(i)
