import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense,Dropout
from random import randint

#выборка

xy = [[0,1],[-3,-2],[4,1],[-2,1],[2,-1],[1,-2],[1,0],[-1,0],[-1,-1],[0,-1],[0,-2],[ -72,99],[-154,148],[-110,163],[57,-69],[126,-98],[-24,106],[168,13]]
answer1=[0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0]
answer2=[1,1,1,1,1,1,1]
answer3=[0,0,0,0,0,0,0,0,0,0,0,0]
answer4=[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]#ответы для нс
test1 = [[0,0],[1,0],[-1,0],[-1,-1],[0,-1],[1,-1],[0,-2]]
test2 = [[1,1],[0,-3],[-2,-1],[-1,-2],[-2,0],[-1,1],[0,1],[-2,1],[2,1],[2,0],[2,-1],[1,-2]]
test3 = [[0,0],[1,0],[-1,0],[-1,-1],[0,-1],[1,-1],[0,-2],[1,1],[0,-3],[-2,-1],[-1,-2],[-2,0],[-1,1],[0,1],[-2,1],[2,1],[2,0],[2,-1],[1,-2],[180,30],[32,68],[-11,35],[-120,-83],[68,-89]]#тестовые значения
xy = np.array(list(xy))
test1=np.array(test1)
test2=np.array(test2)
test3=np.array(test3)
answer1=np.array(answer1)
answer2=np.array(answer2)
answer3=np.array(answer3)
answer4=np.array(answer4)

#нс

model1=keras.Sequential([
   Dense(1, input_shape=(2,),activation='sigmoid'),
   Dense(1,activation = 'linear'),
   Dense(1,activation = 'linear')
])#создаём стопку слоёв из одного слоя с 2-мя входами
model1.compile(loss='mean_squared_error', optimizer = keras.optimizers.Adam(0.1), metrics=['accuracy'])#настраиваем модель нс
history1 = model1.fit( x=xy, y=answer1, epochs = 2000, verbose=False,validation_split=0.2)#обучаем
plt.plot(history1.history['loss'])
plt.grid(True)
plt.show#выводим график
print(model1.get_weights())#выводим веса

#evaluate

# Оценим модель на тестовых данных, используя "evaluate"
print('\n# Оцениваем на тестовых данных')
model1.evaluate(test1, answer2)#ответы с выходным значением 1
model1.evaluate(test2, answer3)#ответы с выходным значением 0
model1.evaluate(test3, answer4)#смешанные ответы
