import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense,Dropout
from random import randint

#генератор

xyz = set()
answer = []
while len(xyz)<1000:
    a = (randint(0, 225), randint(0, 225), randint(0, 225))
    xyz.add(a)
for x in xyz:
    if x[0] >128 :
        if x[1]+-1 == x[2]or x[1]+-2==x[2]  or x[1] == x[2] or x[1]+-3 == x[2] or x[1]+-4 == x[2] and x[1] or x[2] < 115:
            answer.append(1)
        else:
            answer.append(0)
    else:
        answer.append(0)
test = list(xyz)[:300]
test_answers= answer[:300]
np.array(list(xyz))
np.array(answer)
np.array(test)
np.array(test_answers)

#Нс

model1=keras.Sequential([
   Dense(1, input_shape=(3,),activation='sigmoid'),
   Dense(1,activation = 'linear'),
   Dense(1,activation = 'linear')
])#создаём стопку слоёв из одного слоя с 2-мя входами
model1.compile(loss='mean_squared_error', optimizer = keras.optimizers.Adam(0.1), metrics=['accuracy'])#настраиваем модель нс
history1 = model1.fit( x=xyz, y=answer, epochs = 2000, verbose=False, validation_split=0.2)#обучаем
plt.plot(history1.history['loss'])
plt.grid(True)
plt.show#выводим график
print(model1.get_weights())#выводим веса

# Оценим модель на тестовых данных, используя "evaluate"

print('\n# Оцениваем на тестовых данных')
model1.evaluate(test, test_answers)
