import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras
from tensorflow.keras.layers import Dense,Dropout
from random import randint

#генератор (ниже)

xy = set()
while len(xy) < 400:
  a = (randint(-200, 200), randint(-2000, 2000))
  if a[1] == a[0]*1.5-3 or a[1] == a[0]*-0.5+2:
     continue
  xy.add(a)#генерируем значения кординат
xy = np.array(list(xy))
answer = []
for x in xy :
    equation = x[0]*1.5-3
    equation1 = x[0]*-0.5+2
    answer.append([x[1]-equation,x[1]-equation1])
answer=np.array(answer)#генерируем ответы исходя из xy(всё от 15 строки)

#нейронная сеть (ниже)

model=keras.Sequential([
   Dense(2, input_shape=(2,), activation='linear'),
   Dense(2, input_shape=(2,), activation='linear')
])#создаём стопку слоёв из 2-ух слоёв с 2-мя входами
model.compile(loss='mean_squared_error', optimizer = keras.optimizers.Adam())# модель нс
history = model.fit( x=xy, y=answer, epochs = 1000, verbose=False)#обучаем
plt.plot(history.history['loss'])
plt.grid(True)
plt.show#выводим график
print(model.get_weights())#выводим веса

#ввод (ниже)

inp = list(map(int, input().split()))
for num1, num2 in zip(inp[::2], inp[1::2]):#ввод значений
     a = model.predict(np.array([[num2 ,num1]]))
     if a[0][0] > 0 and a[0][1] > 0:
        print(4)
     if a[0][0] < 0 and a[0][1] < 0:
        print(2)
     if a[0][0] < 0 and a[0][1] > 1:
        print(3)
     if a[0][1] < 0 and a[0][0] > 1:
        print(1)
#выводы относительно заданных границ

